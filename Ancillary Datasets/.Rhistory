avg_cpi<-data.frame()
for (i in 1:nrow(bls_data)){
avg_cpi<-rbind(avg_cpi, mean(t(bls_data[i,2:13]),na.rm = TRUE))
}
colnames(avg_cpi)<-('Year','Mean_Index')
avg_cpi<-data.frame()
colnames(avg_cpi)<-('Year','Mean_Index')
avg_cpi<-data.frame()
colnames(avg_cpi)<-c('Year','Mean_Index')
?data.frame
avg_cpi<-data.frame()
for (i in 1:nrow(bls_data)){
avg_cpi$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
avg_cpi$Year[i]<-bls_data$Year[i]
}
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
View(bls_data)
bls_data[bls_data$Year=='2000']
bls_data[bls_data$Year==2000]
bls_data[bls_data$Year=='2000',]
bls_data[bls_data$Year=='2000',]$Mean_Index
bls_data[bls_data$Year=='2000',]$Mean_Index[1]
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
inflation_adjustment(100,'2000','2012')
inflation_adjustment(500,'2000','2012')
inflation_adjustment(500,'2000','2020')
housing_data<-uftraf_data
as.numeric('$5.20')
View(housing_data)
sum(1,2)
str_split('1-2-3')
str_split('1-2-3',pattern = '-')
as.numeric(str_split('1-2-3',pattern = '-'))
as.numeric(str_split('1-2-3',pattern = '-')[1])
as.numeric(str_split('1-2-3',pattern = '-')[[1]])
sum(as.numeric(str_split('1-2-3',pattern = '-')[[1]]))
for (i in 1:nrow(housing_data)){
housing_data$stories_all_buildings[i]<-sum(as.numeric(str_split(housing_data$number_of_stories[i],pattern = '-')[[1]]))
}
View(housing_data)
?gsub
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(housing_data$number_of_stories[i],',','-'),pattern = '-')[[1]]))
}
View(housing_data)
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(',','-',gsub(housing_data$number_of_stories[i]),pattern = '-')[[1]]))
}
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i])),pattern = '-')[[1]])
}
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
}
housing_data[[12]]
housing_data[1][[1]]
housing_data[1][[2]]
gsub(c('c','o'),'','cookies')
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-as.numeric(gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]]))))
}
}
View(housing_data)
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-as.numeric(gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]]))))
}
}
housing_data[,12:34]
housing_data[,12:34]<-as.numeric(housing_data[,12:34])
housing_data[,12:34]<-as.numeric(housing_data[[12:34]]
housing_data[,12:34]<-as.numeric(housing_data[[12:34]]
housing_data[,12:34]<-as.numeric(housing_data[[12:34]])
housing_data[,12:34]<-as.numeric(housing_data[[12:34]])
housing_data[[12:34]]
housing_data[1:2][[12:34]]
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-as.numeric(gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]]))))
}
}
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:34){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
View(housing_data)
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
housing_data$development_cost
as.numeric(housing_data$development_cost)
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('$','',gsub(',','',housing_data[i][[j]]))
}
}
gsub('$','',(housing_data$development_cost)
gsub('$','',(housing_data$development_cost))
gsub('$','',(housing_data$development_cost))
gsub("$",'',(housing_data$development_cost))
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[3],'2020')
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[3],'2020')
}
str_split(housing_data$completion_date[1][3]
str_split(housing_data$completion_date[1][3]
str_split(housing_data$completion_date[1])[3]
str_split(housing_data$completion_date[1],pattern = '/')[3]
str_split(housing_data$completion_date[1],pattern = '/')
str_split(housing_data$completion_date[1],pattern = '/')[1][[3]]
str_split(housing_data$completion_date[1],pattern = '/')[[3]]
str_split(housing_data$completion_date[1],pattern = '/')[3][[1]]
str_split(housing_data$completion_date[1],pattern = '/')[1]
str_split(housing_data$completion_date[1],pattern = '/')[1][2]
str_split(housing_data$completion_date[1],pattern = '/')[1][[2]]
str_split(housing_data$completion_date[1],pattern = '/')[1,3]
str_split(housing_data$completion_date[1],pattern = '/')[1]
str_split(housing_data$completion_date[1],pattern = '/')[[1]]
str_split(housing_data$completion_date[1],pattern = '/')[[1]][3]
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
}
View(uftraf_data)
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','.',housing_data[i][[j]])))
}
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
}
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
View(bls_data)
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
}
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
housing_data$Adjusted_Cost_Per_Room[i]<-inflation_adjustment(as.numeric(housing_data$per_rental_room[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
}
cost_dist<-ggplot(data = housing_data,aes(x='Adjusted_Cost_Per_Room'))+
geom_histogram()
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram()
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="white")
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="white",binwidth = 1000)
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 1000)
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 1000)+
scale_color_brewer(palette="Dark2")
cost_dist
cost_dist+
scale_color_brewer(palette="Dark2")
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 1000)
cost_dist
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 5000)
cost_dist
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
housing_data$completion_year[i]<-str_split(housing_data$completion_date[i],pattern = '/')[[1]][3]
}
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
housing_data$completion_year[i]<-str_split(housing_data$completion_date[i],pattern = '/')[[1]][3]
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),,'2020')
housing_data$Adjusted_Cost_Per_Room[i]<-inflation_adjustment(as.numeric(housing_data$per_rental_room[i]),str_split(housing_data$completion_date[i],pattern = '/')[[1]][3],'2020')
}
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 5000)
cost_dist
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),housing_data$completion_date[i],'2020')
housing_data$Adjusted_Cost_Per_Room[i]<-inflation_adjustment(as.numeric(housing_data$per_rental_room[i]),housing_data$completion_date[i],'2020')
}
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 5000)
cost_dist
housing_data$completion_date[2]
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
housing_data$completion_year[i]<-str_split(housing_data$completion_date[i],pattern = '/')[[1]][3]
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),housing_data$completion_year[i],'2020')
housing_data$Adjusted_Cost_Per_Room[i]<-inflation_adjustment(as.numeric(housing_data$per_rental_room[i]),housing_data$completion_year[i],'2020')
}
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 5000)
cost_dist
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjsuted_Cost_Per_Room))+
geom_line()
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_line()
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_point()
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_continuous(name="Speed of cars", limits=c(1930, 2020))
time_chart
library(jsonlite)
library(httr)
library(purrr)
library(data.table)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
#Getting JSON data from the NYDOT and binding it to a dataframe
url = "https://data.cityofnewyork.us/resource/evjd-dqpz.json"
traf_data<-(GET(url = url))
uftraf_data<-rbindlist(content(traf_data), fill = TRUE)
housing_data<-uftraf_data
##Cleaning and Parsing
for (i in 1:nrow(housing_data)){
housing_data$mean_stories[i]<-mean(as.numeric(str_split(gsub(',','-',housing_data$number_of_stories[i]),pattern = '-')[[1]]))
for (j in 12:35){
housing_data[i][[j]]<-gsub('\\$','',gsub('%','',gsub(',','',housing_data[i][[j]])))
}
housing_data$completion_year[i]<-as.numeric(str_split(housing_data$completion_date[i],pattern = '/')[[1]][3])
}
#Adjusting Development Costs for Inflation(Using BLS Urban CPI dataset)
bls_data<-read_xlsx('BLS.xlsx')
for (i in 1:nrow(bls_data)){
bls_data$Mean_Index[i]<-mean(t(bls_data[i,2:13]),na.rm = TRUE)
}
inflation_adjustment<-function(price,priceyear,baseyear){
return(price*((bls_data[bls_data$Year==baseyear,]$Mean_Index[1])/bls_data[bls_data$Year==priceyear,]$Mean_Index[1]))
}
for (i in 1:nrow(housing_data)){
housing_data$Adjusted_Development_Cost[i]<-inflation_adjustment(as.numeric(housing_data$development_cost[i]),housing_data$completion_year[i],'2020')
housing_data$Adjusted_Cost_Per_Room[i]<-inflation_adjustment(as.numeric(housing_data$per_rental_room[i]),housing_data$completion_year[i],'2020')
}
cost_dist<-ggplot(data = housing_data,aes(x=Adjusted_Cost_Per_Room))+
geom_histogram(color="black", fill="lightblue",binwidth = 5000)
cost_dist
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_continuous(name="Speed of cars", limits=c(1930, 2020))
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_date,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_continuous(name="Speed of cars", limits=c(1930, 2020))
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_date,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_continuous(name="Speed of cars", limits=c(1930, 2020))
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_date,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_date(name="Speed of cars", limits=c(1930, 2020))
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_date(name="Speed of cars", limits=c(1930, 2020))
time_chart
time_chart<-ggplot(data = housing_data,aes(x=completion_year,y=Adjusted_Cost_Per_Room))+
geom_point()+
scale_x_continuous(name="Speed of cars", limits=c(1930, 2020))
time_chart
